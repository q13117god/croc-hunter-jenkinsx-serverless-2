Step: build-step-credential-initializer:

{"level":"warn","ts":1551350656.7335396,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1551350656.734365,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}
Step: build-step-git-source-0:

{"level":"warn","ts":1551350658.6812327,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1551350660.1689208,"logger":"fallback-logger","caller":"git-init/main.go:92","msg":"Successfully cloned \"https://github.com/carlossg/croc-hunter-jenkinsx-serverless-2.git\" @ \"3d99674fcc2f41dd8cf2acbda514d2a36e3ac1b1\" in path \"/workspace\""}
Step: build-step-jenkins:

Picked up _JAVA_OPTIONS: -Xmx400m
Started
Running in Durability level: PERFORMANCE_OPTIMIZED
 116.529 [id=19]	WARNING	i.f.k.c.i.VersionUsageUtils#alert: The client is using resource type 'customresourcedefinitions' with unstable version 'v1beta1'
[Pipeline] node
Running on Jenkins in /tmp/jenkinsTests.tmp/jenkins8544563418977229082test/workspace/job
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
[Pipeline] }
[Pipeline] // stage
[Pipeline] withCredentials
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (CI Build and push snapshot)
[Pipeline] withEnv
[Pipeline] {
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/carlossg/croc-hunter-jenkinsx-serverless
[Pipeline] {
[Pipeline] checkout
[Pipeline] sh
+ make VERSION=0.0.0-SNAPSHOT-PR-9-2 GIT_COMMIT=3d99674fcc2f41dd8cf2acbda514d2a36e3ac1b1 linux
cp skaffold.yaml skaffold.yaml.new
sed -i -e "s/{{.VERSION}}/0.0.0-SNAPSHOT-PR-9-2/" skaffold.yaml.new
sed -i -e "s/{{.GIT_COMMIT}}/3d99674fcc2f41dd8cf2acbda514d2a36e3ac1b1/" skaffold.yaml.new
CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO15VENDOREXPERIMENT=1 go build -ldflags '' -o bin/croc-hunter-jenkinsx croc-hunter.go
[Pipeline] sh
+ export VERSION=0.0.0-SNAPSHOT-PR-9-2
+ skaffold build -f skaffold.yaml.new
time="2019-02-28T10:50:57Z" level=warning msg="config version (skaffold/v1beta1) out of date: upgrading to latest (skaffold/v1beta3)"
Starting build...
Building [changeme]...
Sending build context to Docker daemon  525.8kBSending build context to Docker daemon   6.99MB
Step 1/10 : FROM scratch
 ---> 
Step 2/10 : ARG GIT_SHA
 ---> Running in 16aeab3e7cf6
 ---> 3e3aeaf1a0e6
Step 3/10 : ARG WORKFLOW_RELEASE
 ---> Running in 0ffcc564c96a
 ---> 1de44073a176
Step 4/10 : ENV GIT_SHA $GIT_SHA
 ---> Running in c526b678b289
 ---> 8679753aca8f
Step 5/10 : ENV WORKFLOW_RELEASE $WORKFLOW_RELEASE
 ---> Running in ee6494d0f082
 ---> 72df96afa383
Step 6/10 : ENV POWERED_BY Jenkins-X
 ---> Running in 9f5c4c0a30d8
 ---> e52060aed0f4
Step 7/10 : EXPOSE 8080
 ---> Running in 7f2b3f984d41
 ---> 354733de6353
Step 8/10 : ENTRYPOINT /croc-hunter-jenkinsx
 ---> Running in 392325199df8
 ---> 023ef8f994ef
Step 9/10 : COPY ./bin/ /
 ---> e704903404c3
Step 10/10 : COPY static/ static/
 ---> c28157030f1f
Successfully built c28157030f1f
The push refers to a repository [10.47.253.185:5000/carlossg/croc-hunter-jenkinsx]
df731f4b80cd: Preparing
9060b8ce2f0c: Preparing
df731f4b80cd: Pushed
9060b8ce2f0c: Pushed
0.0.0-SNAPSHOT-PR-9-2: digest: sha256:11cd3425766dd0225ebd6a7aa09ad636dd29cfd4f6155350db36c7b7f56e00fd size: 738
Build complete in 5.783900798s
Starting test...
Test complete in 18.098Âµs
changeme -> 10.47.253.185:5000/carlossg/croc-hunter-jenkinsx:0.0.0-SNAPSHOT-PR-9-2
[Pipeline] sh
+ jx step validate --min-jx-version 1.2.36
[Pipeline] sh
+ jx step post build --image 10.47.253.185:5000/carlossg/croc-hunter-jenkinsx:0.0.0-SNAPSHOT-PR-9-2
[Pipeline] }
[Pipeline] // dir
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/carlossg/croc-hunter-jenkinsx-serverless/charts/preview
[Pipeline] {
[Pipeline] sh
+ make preview
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-9-2/" Chart.yaml
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-9-2/" ../*/Chart.yaml
sed -i -e "s|repository: .*|repository: 10.47.253.185:5000\/carlossg\/golang-http|" values.yaml
sed -i -e "s/tag: .*/tag: 0.0.0-SNAPSHOT-PR-9-2/" values.yaml
echo "  version: 0.0.0-SNAPSHOT-PR-9-2" >> requirements.yaml
jx step helm build
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: jenkins-x http://chartmuseum.jenkins-x.io
Successfully added Helm repository jenkins-x.
Adding missing Helm repo: releases http://jenkins-x-chartmuseum:8080
Successfully added Helm repository releases.
Adding missing Helm repo: repo5 https://chartmuseum.build.cd.jenkins-x.io
Successfully added Helm repository repo5.
[Pipeline] sh
+ jx preview --app croc-hunter-jenkinsx --dir ../..
Creating a preview
Commit author email is empty for: 3d99674fcc2f41dd8cf2acbda514d2a36e3ac1b1
Looking for commits in: /home/jenkins/go/src/github.com/carlossg/croc-hunter-jenkinsx-serverless/
Found commit author match for: carlossg with email address: carlos@apache.org
Created environment carlossg-croc-hunter-jenkinsx-serverless-2-pr-9
Namespace jx-carlossg-croc-hunter-jenkinsx-serverless-2-pr-9 created 
 expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  config:
    domain: example.com
    exposer: Ingress
    http: "true"
preview:
  image:
    repository: 10.47.253.185:5000/carlossg/croc-hunter-jenkinsx
    tag: 0.0.0-SNAPSHOT-PR-9-2
Failed to update PipelineActivities carlossg-croc-hunter-jenkinsx-serverless-2-pr-9-2: the namespace of the object (jx-carlossg-croc-hunter-jenkinsx-serverless-2-pr-9) does not match the namespace on the request (jx)
Preview application is now available at: http://croc-hunter-jenkinsx.jx-carlossg-croc-hunter-jenkinsx-serverless-2-pr-9.example.com

[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Release)
Stage "Build Release" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Promote to Environments)
Stage "Promote to Environments" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
